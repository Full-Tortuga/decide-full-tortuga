{"version":3,"sources":["utils/utils.ts","utils/sessionUtils.ts","components/01-atoms/Button/button.tsx","components/01-atoms/Button/iconButton.tsx","components/01-atoms/Loader/loader.tsx","components/01-atoms/Title/title.tsx","components/01-atoms/Input/controlledInput.tsx","components/01-atoms/Input/Text/TextInput.tsx","components/01-atoms/Input/Secret/SecretInput.tsx","components/01-atoms/Input/index.ts","components/01-atoms/Input/Radio/RadioInput.tsx","components/01-atoms/Notification/notification.tsx","components/01-atoms/StatBox/statBox.tsx","api/axios.ts","api/userApiUtils.ts","api/authApiUtils.ts","api/votingApiUtils.ts","api/dashboardApiUtils.ts","components/templates/menu.tsx","components/02-molecules/Table/table.tsx","components/02-molecules/Modal/modal.tsx","components/02-molecules/Modal/modalPage.tsx","components/templates/users/userTable.tsx","components/templates/users/userForm.tsx","components/templates/votings/questionInput.tsx","components/templates/votings/censusInput.tsx","components/templates/votings/votingTable.tsx","components/templates/votings/votingForm.tsx","components/03-organisms/Actions/actionBar.tsx","components/pages/page.tsx","components/pages/base/home.tsx","components/pages/base/404.tsx","components/pages/base/login.tsx","components/pages/users/users.tsx","components/pages/votings/votings.tsx","routes/routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["util","parseErrors","error","JSON","stringify","response","data","replaceAll","message","getStatus","voting","start_date","end_date","length","getStatusColor","status","sessionUtils","getToken","document","cookie","split","find","row","startsWith","setToken","removeToken","Component","props","Button","type","variant","onClick","disabled","title","Tooltip","IconButton","color","icon","CircularProgress","Typography","align","ControlledInput","useFormLabel","FormLabel","name","toUpperCase","control","rules","render","field","fieldState","TextField","inputRef","ref","autoComplete","label","required","invalid","helperText","Input","Text","Secret","Radio","toLowerCase","RadioGroup","options","map","option","FormControlLabel","value","React","useState","open","setOpen","Snackbar","onClose","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Card","className","Math","floor","active","total","Box","sx","position","theme","palette","grey","left","size","thickness","disableShrink","CardContent","gutterBottom","component","Chip","API_URL","window","location","href","includes","origin","axios","Axios","create","baseURL","withCredentials","headers","Accept","interceptors","use","reload","Promise","reject","console","warn","userApi","getUsers","get","deleteUsers","idList","delete","updateUsersActive","post","state","updateUsersRole","role","getUser","id","createUser","user","updateUser","put","deleteUser","authApi","login","username","password","logout","votingApi","getQuestions","deleteQuestions","deleteAllQuestions","getQuestion","questionId","createQuestion","question","updateQuestion","deleteQuestion","getVotings","deleteVotings","deleteAllVotings","startVotings","action","stopVotings","tallyVotings","getVoting","votingId","createVoting","updateVoting","deleteVoting","dashboardApi","getData","LinkTab","to","Tab","Menu","setValue","useLocation","useEffect","tab","pathname","HowToVote","scale","hidden","Tabs","onChange","event","newValue","orientation","centered","Home","Person","finally","Logout","filterRows","ids","rows","filter","initialSelection","selectionModel","setSelectionModel","updateSelectionModel","newSelection","setSelected","autoHeight","columns","pageSize","checkboxSelection","onSelectionModelChange","e","page","setPage","handleClose","externalClose","openerIcon","Dialog","fullWidth","DialogTitle","onSubmit","preventDefault","pages","p","i","DialogActions","DialogContent","DialogContentText","description","children","headerName","minWidth","renderCell","params","users","editMode","useMemo","initialUser","useForm","mode","getValues","trigger","clearErrors","errors","formState","reset","sent","setSent","_defaultValues","first_name","last_name","email","onSubmitFailed","notify","onSubmitSuccess","refetch","log","Object","keys","then","catch","utils","Edit","Add","pattern","desc","number","validate","descRequired","v","optionsRequired","handleInitialValue","target","updateDesc","o","updateOption","removeOption","Remove","addOption","setRefetch","setUsers","refetchUsers","selection","u","Refresh","join","arrow","valueFormatter","toLocaleString","replace","HowToVoteOutlined","hostname","port","Visibility","votings","initialVoting","census","auth","host","bulkEnabled","actions","Divider","individualActions","index","bulkActions","Page","notifications","notification","HomePage","setData","setNotifications","prev","totalVotings","values","reduce","acc","employees","admins","notStarted","inProgress","finished","NotFoundPage","LoginPage","setError","r","UsersPage","selected","selectionState","checkOptions","activeNumber","is_active","staffNumber","is_staff","suNumber","is_superuser","staff","su","handleChangeActive","handleChangeRole","undefined","Delete","Pause","PlayArrow","Verified","AdminPanelSettings","VotingsPage","setVotings","refetchVotings","newNumber","inProgressNumber","finishedNumber","getSelectionStatus","Stop","Cancel","AppRoutes","isAuthenticated","fallback","basename","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6dc7108.chunk.js","sourcesContent":["import { votingType } from \"types\";\n\nconst util = () => {\n  return null;\n};\n\nconst parseErrors = (error: any) => {\n  return (\n    JSON.stringify(error.response?.data)\n      .replaceAll(\"[\", \"\")\n      .replaceAll(\"]\", \"\")\n      .replaceAll('\"', \"\")\n      .replaceAll(\"{\", \"\")\n      .replaceAll(\"}\", \"\")\n      .replaceAll(\",\", \"\\n\") || error.message\n  );\n};\n\nconst getStatus = (voting: votingType.Voting) => {\n  if (voting.start_date === null && voting.end_date === null) return \"New\";\n  else if (voting.start_date.length > 0 && voting.end_date === null)\n    return \"In progress\";\n  else if (voting.start_date.length > 0 && voting.end_date.length > 0)\n    return \"Finished\";\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case \"New\":\n      return \"primary\";\n    case \"In progress\":\n      return \"warning\";\n    case \"Finished\":\n      return \"success\";\n    default:\n      return \"primary\";\n  }\n};\n\nexport { util, parseErrors, getStatus, getStatusColor };\n","const sessionUtils = {\n  getToken: () => {\n    return document.cookie\n      .split(\"; \")\n      ?.find((row) => row.startsWith(\"token\"))\n      ?.split(\"=\")?.[1];\n  },\n  setToken: (cookie?: string) => {\n    if (cookie) document.cookie = cookie;\n  },\n  removeToken: () => {\n    document.cookie = \"token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  },\n};\n\nexport default sessionUtils;\n","import React from \"react\";\n\nimport { Button } from \"@mui/material\";\n\ntype Variant = \"outlined\" | \"contained\" | \"text\";\n\nconst Component = (props: {\n  title: string;\n  type?: \"submit\" | \"button\" | \"reset\";\n  variant?: Variant;\n  disabled?: boolean;\n  onClick?: () => void;\n}) => {\n  return (\n    <Button\n      type={props.type || \"button\"}\n      variant={props.variant || \"outlined\"}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.title}\n    </Button>\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\n\nimport { IconButton, Tooltip } from \"@mui/material\";\n\nconst Component = (props: {\n  title: string;\n  icon: ReactElement;\n  type?: \"submit\" | \"button\" | \"reset\";\n  disabled?: boolean;\n  onClick?: () => void;\n}) => {\n  return (\n    <Tooltip title={props.title}>\n      <IconButton\n        color=\"primary\"\n        type={props.type || \"button\"}\n        onClick={props.onClick}\n        disabled={props.disabled}\n      >\n        {props.icon}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\n\nimport { CircularProgress } from \"@mui/material\";\n\nconst Component = () => {\n  return <CircularProgress />;\n};\n\nexport default Component;\n","import React from \"react\";\n\nimport { Typography } from \"@mui/material\";\n\ntype Variant =\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"subtitle1\"\n  | \"subtitle2\"\n  | \"body1\"\n  | \"body2\"\n  | \"caption\"\n  | \"button\"\n  | \"overline\";\n\nconst Component = (props: { title: string; variant: Variant }) => {\n  return (\n    <Typography align=\"left\" variant={props.variant}>\n      {props.title}\n    </Typography>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\n\nimport { FormLabel, TextField } from \"@mui/material\";\nimport { Controller } from \"react-hook-form\";\nimport { InputProps } from \".\";\n\nconst ControlledInput = (props: InputProps) => {\n  return (\n    <>\n      {props.useFormLabel && <FormLabel>{props.name.toUpperCase()}</FormLabel>}\n      <Controller\n        name={props.name}\n        control={props.control}\n        rules={props.rules}\n        render={({ field, fieldState }) => (\n          <TextField\n            inputRef={field.ref}\n            autoComplete=\"off\"\n            {...field}\n            type={props.type}\n            label={props.name}\n            required={props.rules?.required}\n            error={fieldState.invalid}\n            helperText={fieldState.error?.message}\n          />\n        )}\n      />\n    </>\n  );\n};\n\nexport default ControlledInput;\n","import React from \"react\";\n\nimport { FieldProps } from \"..\";\nimport ControlledInput from \"../controlledInput\";\n\nconst Component = (props: FieldProps) => {\n  return <ControlledInput {...props} type=\"text\" />;\n};\n\nexport default Component;\n","import React from \"react\";\n\nimport { FieldProps } from \"..\";\nimport ControlledInput from \"../controlledInput\";\n\nconst Component = (props: FieldProps) => {\n  return <ControlledInput {...props} type=\"password\" />;\n};\n\nexport default Component;\n","import Text from \"./Text/TextInput\";\nimport Secret from \"./Secret/SecretInput\";\nimport Radio from \"./Radio/RadioInput\";\n\nexport type FieldProps = {\n  name: string;\n  control: any;\n  error?: string;\n  rules?: any;\n};\n\nexport type RadioOption = {\n  label: string;\n  value: string;\n};\n\nexport type RadioProps = FieldProps & {\n  options: RadioOption[];\n};\n\nexport type InputProps = FieldProps & {\n  type?: \"text\" | \"password\";\n  useFormLabel?: boolean;\n};\n\nexport const Input = { Text, Secret, Radio };\n","import React from \"react\";\n\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from \"@mui/material\";\nimport { Controller } from \"react-hook-form\";\nimport { RadioOption, RadioProps } from \"..\";\n\nconst Component = (props: RadioProps) => {\n  return (\n    <>\n      <FormLabel>{props.name.toLowerCase()}</FormLabel>\n      <Controller\n        name={props.name}\n        control={props.control}\n        rules={props.rules}\n        render={({ field, fieldState }) => (\n          <RadioGroup {...field}>\n            {props.options.map((option: RadioOption) => (\n              <FormControlLabel\n                value={option.value}\n                control={<Radio />}\n                label={option.label}\n              />\n            ))}\n          </RadioGroup>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nimport { Severity } from \".\";\n\nconst Component = (props: { severity: Severity; message: string }) => {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <Snackbar\n      open={open}\n      onClose={() => setOpen(false)}\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n    >\n      <Alert severity={props.severity} onClose={() => setOpen(false)}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\n\nconst Circle = (\n  value: number,\n  icon: ReactElement,\n  color: \"success\" | \"warning\" | \"primary\"\n) => {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      <CircularProgress\n        variant=\"determinate\"\n        sx={{\n          color: (theme) => theme.palette.grey[200],\n          position: \"absolute\",\n          left: 0,\n        }}\n        size={100}\n        thickness={6}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"determinate\"\n        disableShrink\n        size={100}\n        thickness={8}\n        value={value || 0}\n        color={color}\n      />\n      <span className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n        {icon}\n      </span>\n    </Box>\n  );\n};\n\nconst Component = (props: {\n  title: string;\n  total: number;\n  active: number;\n  icon: ReactElement;\n  color: \"success\" | \"warning\" | \"primary\";\n}) => {\n  return (\n    <Card className=\"grid-cols-1 p-3\">\n      <div className=\"flex justify-center items-center\">\n        {Circle(\n          Math.floor((props.active / props.total) * 100),\n          props.icon,\n          props.color\n        )}\n      </div>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {props.title}\n        </Typography>\n        <p>\n          Total: <Chip label={props.total} color=\"default\" />\n        </p>\n        <p>\n          {props.title}: <Chip label={props.active} color={props.color} />\n        </p>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Component;\n","import Axios from \"axios\";\n\nimport { sessionUtils } from \"utils\";\n\nconst BASE_URL = window.location.href.includes(\"localhost\")\n  ? \"http://localhost:8000/administration\"\n  : window.location.origin + \"/administration\";\n\nconst API_URL = BASE_URL + \"/api\";\n\nexport const axios = Axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\n// Auth interceptor (logout)\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 403 || error.response?.status === 401) {\n      sessionUtils.removeToken();\n      window.location.reload();\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Error handling interceptor\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const message = error.response?.data?.message || error.message;\n    console.warn(message);\n    return Promise.reject(error);\n  }\n);\n","import { axios } from \"api/axios\";\nimport { userType } from \"types\";\n\nconst userApi = {\n  // bulk simple operations\n  getUsers: () => axios.get(\"/users\"),\n  deleteUsers: (idList: number[]) =>\n    axios.delete(\"/users\", {\n      data: { idList: idList },\n    }),\n\n  // bulk role/status operations\n  updateUsersActive: (idList: number[], value: boolean) =>\n    axios.post(\"/users/state\", {\n      idList: idList,\n      state: \"Active\",\n      value: value ? \"True\" : \"False\",\n    }),\n  updateUsersRole: (\n    idList: number[],\n    value: boolean,\n    role: \"Staff\" | \"Superuser\"\n  ) =>\n    axios.post(\"/users/state\", {\n      idList: idList,\n      state: role,\n      value: value ? \"True\" : \"False\",\n    }),\n\n  // individual simple operations\n  getUser: (id: number) => axios.get(`/users/${id}`),\n  createUser: (user: userType.User) => axios.post(\"/users\", user),\n  updateUser: (id: number, user: userType.User) =>\n    axios.put(`/users/${id}`, user),\n  deleteUser: (id: number) => axios.delete(`/users/${id}`),\n};\n\nexport default userApi;\n","import { axios } from \"api/axios\";\n\nconst authApi = {\n  login: (username: string, password: string) => {\n    return axios.post(\"/auth/login\", {\n      username,\n      password,\n    });\n  },\n  logout: () => {\n    return axios.post(\"/auth/logout\");\n  },\n};\n\nexport default authApi;\n","import { axios } from \"api/axios\";\nimport { votingType } from \"types\";\n\nconst votingApi = {\n  //QUESTION API\n  //Bulk Operations\n  getQuestions: () => axios.get(\"/voting/question\"),\n  deleteQuestions: (idList: number[]) =>\n    axios.delete(\"/voting/questions\", {\n      data: { idList: idList },\n    }),\n  deleteAllQuestions: () => axios.delete(`/voting/question`),\n\n  //Individual Operations\n  getQuestion: (questionId: number) =>\n    axios.get(`/voting/question/${questionId}/`),\n  createQuestion: (question: votingType.Question) =>\n    axios.post(\"/voting/question/\", question),\n  updateQuestion: (question: votingType.Question, questionId: number) =>\n    axios.put(`/voting/question/${questionId}/`, question),\n  deleteQuestion: (questionId: number) =>\n    axios.delete(`/voting/question/${questionId}/`),\n\n  //VOTING API\n  //Bulk Operations\n  getVotings: () => axios.get(`/votings`),\n  deleteVotings: (idList: number[]) =>\n    axios.delete(\"/votings\", {\n      data: { idList: idList },\n    }),\n  deleteAllVotings: () => axios.delete(`/votings`),\n\n  startVotings: (idList: number[]) =>\n    axios.put(\"/votings\", {\n      idList: idList,\n      action: \"start\",\n    }),\n\n  stopVotings: (idList: number[]) =>\n    axios.put(\"/votings\", {\n      idList: idList,\n      action: \"stop\",\n    }),\n\n  tallyVotings: (idList: number[]) =>\n    axios.put(\"/votings\", {\n      idList: idList,\n      action: \"tally\",\n    }),\n\n  //Individual Operations\n  getVoting: (votingId: number) => axios.get(`/votings/${votingId}/`),\n  createVoting: (voting: votingType.VotingFormFields) =>\n    axios.post(\"/votings\", voting),\n  updateVoting: (voting: votingType.VotingFormFields, votingId: number) =>\n    axios.put(`/votings/${votingId}/`, voting),\n  deleteVoting: (votingId: number) => axios.delete(`/votings/${votingId}/`),\n};\n\nexport default votingApi;\n","import { axios } from \"api/axios\";\n\nconst dashboardApi = {\n  getData: () => {\n    return axios.get(\"/dashboard\");\n  },\n};\n\nexport default dashboardApi;\n","import React, { ReactElement } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { Tooltip } from \"@mui/material\";\nimport { Home, Person, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { authApi } from \"api\";\nimport { sessionUtils } from \"utils\";\n\nimport { IconButton } from \"components/01-atoms\";\n\nconst LinkTab = (props: {\n  label?: string;\n  icon?: ReactElement;\n  href?: string;\n}) => {\n  return (\n    <Link to={props.href || \".\"}>\n      <Tooltip title={props.label || \"\"}>\n        <Tab icon={props.icon} />\n      </Tooltip>\n    </Link>\n  );\n};\n\nconst Menu = (props: { hidden: boolean }) => {\n  const [value, setValue] = React.useState(0);\n\n  const location = useLocation();\n\n  React.useEffect(() => {\n    const tab = location.pathname.split(\"/\")[1];\n    if (tab === \"\" || tab === \"home\") setValue(0);\n    else if (tab === \"users\") setValue(1);\n    else if (tab === \"votings\") setValue(2);\n  }, [location]);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box className=\"inline-flex flex-col w-1/12 h-screen justify-between py-12\">\n      <div>\n        <HowToVote scale={100} />\n        <p className=\"text-sm font-bold\">DECIDE</p>\n        <p className=\"text-xs\">ADMIN</p>\n      </div>\n\n      {!props.hidden && (\n        <nav>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"nav tabs\"\n            orientation=\"vertical\"\n            centered\n          >\n            <LinkTab label=\"Home\" icon={<Home />} href=\"/home\" />\n            <LinkTab label=\"Users\" icon={<Person />} href=\"/users\" />\n            <LinkTab label=\"Votings\" icon={<HowToVote />} href=\"/votings\" />\n          </Tabs>\n        </nav>\n      )}\n      <IconButton\n        title=\"Logout\"\n        onClick={() =>\n          authApi.logout().finally(() => {\n            sessionUtils.removeToken();\n            window.location.reload();\n          })\n        }\n        icon={<Logout />}\n      />\n    </Box>\n  );\n};\n\nexport default Menu;\n","import * as React from \"react\";\n\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\n\nconst Component = (props: {\n  rows: any[];\n  columns: GridColDef[];\n  setSelected: any;\n  initialSelection?: number[];\n}) => {\n  const filterRows = React.useCallback(\n    (ids: any[]) => {\n      return props.rows.filter((row: any) => ids.includes(row.id));\n    },\n    [props.rows]\n  );\n\n  const [selectionModel, setSelectionModel] =\n    React.useState<GridSelectionModel>(props.initialSelection || []);\n\n  const updateSelectionModel = React.useCallback(\n    (newSelection: GridSelectionModel) => {\n      setSelectionModel(newSelection);\n      props.setSelected(filterRows(newSelection));\n    },\n    [props, filterRows]\n  );\n\n  React.useEffect(() => {\n    updateSelectionModel(selectionModel);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.rows]);\n\n  return (\n    <div className=\"w-full\">\n      <DataGrid\n        autoHeight\n        rows={props.rows}\n        columns={props.columns}\n        pageSize={10}\n        checkboxSelection\n        selectionModel={props.initialSelection || selectionModel}\n        onSelectionModelChange={(e) => updateSelectionModel(e)}\n      />\n    </div>\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\n\nimport { Dialog, DialogActions, DialogTitle } from \"@mui/material\";\n\nimport { Button, IconButton } from \"components/01-atoms\";\n\nconst Component = (props: {\n  title: string;\n  openerIcon: ReactElement;\n  pages: ReactElement[];\n  externalClose?: boolean;\n  onSubmit: () => void;\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [page, setPage] = React.useState(1);\n\n  const handleBack = () => {\n    setPage(page - 1);\n  };\n  const handleNext = () => {\n    setPage(page + 1);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    handleClose();\n  }, [props.externalClose]);\n\n  return (\n    <>\n      <IconButton\n        title={props.title}\n        onClick={handleOpen}\n        icon={props.openerIcon}\n      />\n      {open && (\n        <Dialog open={open} onClose={handleClose} fullWidth>\n          <DialogTitle>{props.title}</DialogTitle>\n          <form\n            autoComplete=\"off\"\n            className=\"space-y-5\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              props.onSubmit();\n            }}\n          >\n            {props.pages.map((p, i) => (\n              <div hidden={page !== i + 1} key={i}>\n                {p}\n              </div>\n            ))}\n            <DialogActions className=\"gap-11\">\n              {props.pages.length > 1 && (\n                <div className=\"flex items-end gap-5\">\n                  <Button\n                    onClick={handleBack}\n                    title=\"Back\"\n                    disabled={page === 1}\n                  />\n                  {page} / {props.pages.length}\n                  <Button\n                    onClick={handleNext}\n                    title=\"Next\"\n                    disabled={page === props.pages.length}\n                  />\n                </div>\n              )}\n\n              <Button variant=\"contained\" title=\"Submit\" type=\"submit\" />\n            </DialogActions>\n          </form>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\n\nimport { DialogContent, DialogContentText } from \"@mui/material\";\n\nconst Component = (props: {\n  description?: string;\n  children: ReactElement | ReactElement[];\n}) => {\n  return (\n    <DialogContent>\n      <DialogContentText>{props.description}</DialogContentText>\n      <br />\n      <div className=\"flex flex-col items-center gap-2\">{props.children}</div>\n    </DialogContent>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { GridColDef } from \"@mui/x-data-grid\";\n\nimport { userType } from \"types\";\nimport { Table } from \"components/02-molecules\";\nimport { Chip } from \"@mui/material\";\n\nconst columns: GridColDef[] = [\n  {\n    field: \"is_active\",\n    headerName: \"Status\",\n    minWidth: 120,\n    renderCell: (params) => {\n      return (\n        <Chip\n          label={params.value ? \"active\" : \"not-active\"}\n          color={params.value ? \"success\" : \"warning\"}\n        />\n      );\n    },\n  },\n  {\n    field: \"username\",\n    headerName: \"Username\",\n    minWidth: 140,\n  },\n  {\n    field: \"first_name\",\n    headerName: \"First name\",\n    minWidth: 170,\n  },\n  {\n    field: \"last_name\",\n    headerName: \"Last name\",\n    minWidth: 170,\n  },\n  {\n    field: \"email\",\n    headerName: \"Email\",\n    minWidth: 230,\n  },\n  {\n    field: \"is_staff\",\n    headerName: \"Staff\",\n    minWidth: 80,\n    align: \"center\",\n    renderCell: (params) => {\n      return params.value && <Chip label=\"✔\" color=\"primary\" />;\n    },\n  },\n  {\n    field: \"is_superuser\",\n    headerName: \"Superuser\",\n    minWidth: 120,\n    align: \"center\",\n    renderCell: (params) => {\n      return params.value && <Chip label=\"⛨\" color=\"primary\" />;\n    },\n  },\n];\n\nconst Component = (props: {\n  users: userType.User[];\n  setSelected: any;\n  initialSelection?: number[];\n}) => {\n  return (\n    <Table\n      rows={props.users}\n      columns={columns}\n      setSelected={props.setSelected}\n      initialSelection={props.initialSelection}\n    />\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Add, Edit } from \"@mui/icons-material\";\n\nimport { userApi } from \"api\";\nimport { utils } from \"utils\";\nimport { userType } from \"types\";\n\nimport { Input } from \"components/01-atoms\";\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { ModalPage, Modal } from \"components/02-molecules\";\n\nconst Component = (props: {\n  initialUser?: userType.User;\n  refetch: () => void;\n  notify?: (type: Severity, message: string) => void;\n}) => {\n  const editMode = React.useMemo(\n    () => !!props.initialUser?.id,\n    [props.initialUser]\n  );\n\n  const {\n    control,\n    getValues,\n    trigger,\n    clearErrors,\n    formState: { errors },\n    reset,\n  } = useForm<userType.UserFormFields>({ mode: \"onChange\" });\n\n  const [sent, setSent] = React.useState(false);\n\n  React.useEffect(() => {\n    reset({});\n    clearErrors();\n    trigger();\n    control._defaultValues = {\n      username: props.initialUser?.username,\n      password: \"\",\n      first_name: props.initialUser?.first_name,\n      last_name: props.initialUser?.last_name,\n      email: props.initialUser?.email,\n    };\n  }, [props.initialUser, control, reset, clearErrors, trigger]);\n\n  const onSubmitFailed = (e: any) => {\n    clearErrors();\n    props.notify?.(\"error\", \"Submit failed: \\n\" + e);\n  };\n\n  const onSubmitSuccess = () => {\n    setSent(!sent);\n    props.refetch();\n    props.notify?.(\"success\", editMode ? \"User updated\" : \"User created\");\n    reset({});\n  };\n\n  const onSubmit: SubmitHandler<userType.UserFormFields> = (data) => {\n    console.log(\"submit:\", data);\n\n    if (Object.keys(errors).length === 0)\n      if (editMode && props.initialUser?.id) {\n        userApi\n          .updateUser(props.initialUser?.id, data)\n          .then(() => onSubmitSuccess())\n          .catch((error) => onSubmitFailed(utils.parseErrors(error)));\n      } else {\n        userApi\n          .createUser(data)\n          .then(() => onSubmitSuccess())\n          .catch((error) => onSubmitFailed(utils.parseErrors(error)));\n      }\n  };\n\n  return (\n    <Modal\n      onSubmit={() => onSubmit(getValues())}\n      title={editMode ? \"Edit \" + props.initialUser?.first_name : \"New User\"}\n      openerIcon={editMode ? <Edit /> : <Add />}\n      externalClose={sent}\n      pages={[\n        <ModalPage description=\"Indique la información del Usuario\">\n          <Input.Text\n            control={control}\n            name=\"username\"\n            rules={{\n              required: \"This field is required\",\n              pattern: {\n                value: /^[a-z0-9]+$/,\n                message: \"Use lowercase letters and numbers\",\n              },\n            }}\n          />\n          <Input.Secret\n            control={control}\n            name=\"password\"\n            rules={editMode ? {} : { required: \"This field is required\" }}\n          />\n          <Input.Text control={control} name=\"first_name\" />\n          <Input.Text control={control} name=\"last_name\" />\n          <Input.Text\n            control={control}\n            name=\"email\"\n            rules={{\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"Invalid email address\",\n              },\n            }}\n          />\n        </ModalPage>,\n      ]}\n    />\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Add, Remove } from \"@mui/icons-material\";\nimport { FormLabel, TextField } from \"@mui/material\";\n\nimport { votingType } from \"types\";\n\nimport { IconButton } from \"components/01-atoms\";\n\nconst Component = (props: { control: any }) => {\n  const [value, setValue] = React.useState<votingType.Question>({\n    desc: \"\",\n    options: [\n      { number: 1, option: \"\" },\n      { number: 2, option: \"\" },\n    ],\n  });\n\n  const handleInitialValue = (field: { onChange: any; value: any }) => {\n    if (field.value) setValue(field.value);\n    else field.onChange(value);\n  };\n\n  const updateDesc = (e: any) => {\n    const newValue = { ...value, desc: e.target.value };\n    setValue(newValue);\n    return newValue;\n  };\n\n  const addOption = () => {\n    const newValue = {\n      ...value,\n      options: [\n        ...value.options,\n        { number: value.options.length + 1, option: \"\" },\n      ],\n    };\n    setValue(newValue);\n    return newValue;\n  };\n\n  const updateOption = (number: number, option: string) => {\n    const newValue = {\n      ...value,\n      options: value.options.map((o, i) =>\n        o.number === number ? { ...o, option } : o\n      ),\n    };\n    setValue(newValue);\n    return newValue;\n  };\n\n  const removeOption = (number: number) => {\n    const newValue = {\n      ...value,\n      options: value.options.filter((o) => o.number !== number),\n    };\n    setValue(newValue);\n    return newValue;\n  };\n\n  return (\n    <>\n      <Controller\n        name=\"question\"\n        control={props.control}\n        rules={{\n          validate: {\n            descRequired: (v: votingType.Question) => !!v.desc && v.desc !== \"\",\n            optionsRequired: (v: votingType.Question) =>\n              !!v.options && v.options.length > 1,\n          },\n        }}\n        render={({ field, fieldState }) => {\n          handleInitialValue(field);\n          return (\n            <>\n              <FormLabel>{\"Question\".toLowerCase()}</FormLabel>\n              <TextField\n                autoComplete=\"off\"\n                onChange={(e) => field.onChange(updateDesc(e))}\n                type=\"text\"\n                label=\"question\"\n                required\n                error={fieldState.invalid}\n                helperText={fieldState.error?.message}\n                value={field.value?.desc || \"\"}\n              />\n              <FormLabel className=\"mt-10\">{\"Options\".toLowerCase()}</FormLabel>\n              {(field.value as votingType.Question)?.options.map((o, i) => (\n                <div className=\"flex flex-row items-center\">\n                  <TextField\n                    key={i}\n                    autoComplete=\"off\"\n                    onChange={(e) =>\n                      field.onChange(updateOption(o.number, e.target.value))\n                    }\n                    value={field.value?.options?.[i]?.option || \"\"}\n                    type=\"text\"\n                    label={`option ${o.number}`}\n                    required\n                    error={fieldState.invalid}\n                    helperText={fieldState.error?.message}\n                  />\n                  {i > 1 && (\n                    <IconButton\n                      onClick={() => field.onChange(removeOption(o.number))}\n                      icon={<Remove />}\n                      title=\"Remove Option\"\n                    />\n                  )}\n                </div>\n              ))}\n              <hr />\n              <IconButton\n                onClick={() => field.onChange(addOption())}\n                icon={<Add />}\n                title=\"Add Option\"\n              />\n            </>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Refresh } from \"@mui/icons-material\";\nimport { FormLabel } from \"@mui/material\";\n\nimport { userApi } from \"api\";\nimport { userType } from \"types\";\n\nimport { IconButton } from \"components/01-atoms\";\nimport { UserTable } from \"..\";\n\nconst Component = (props: { control: any }) => {\n  const [refetch, setRefetch] = React.useState(false);\n  const [users, setUsers] = React.useState<userType.User[]>([]);\n\n  const refetchUsers = () => {\n    setRefetch(!refetch);\n  };\n\n  React.useEffect(() => {\n    userApi\n      .getUsers()\n      .then((response) => {\n        console.log(response);\n        setUsers(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [refetch]);\n\n  return (\n    <Controller\n      name=\"census\"\n      control={props.control}\n      rules={{ required: true }}\n      render={({ field, fieldState }) => (\n        <>\n          <FormLabel>{\"Census\".toLowerCase()}</FormLabel>\n          <UserTable\n            setSelected={(selection: userType.User[]) =>\n              field.onChange(selection.map((u) => u.id))\n            }\n            initialSelection={field.value || []}\n            users={users}\n          />\n          <IconButton\n            onClick={refetchUsers}\n            icon={<Refresh />}\n            title=\"Refetch\"\n          />\n        </>\n      )}\n    />\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { GridColDef } from \"@mui/x-data-grid\";\nimport { HowToVoteOutlined, Visibility } from \"@mui/icons-material\";\nimport { Chip, Tooltip } from \"@mui/material\";\n\nimport { votingType } from \"types\";\nimport { utils } from \"utils\";\n\nimport { Table } from \"components/02-molecules\";\nimport { IconButton } from \"components/01-atoms\";\n\nconst columns: GridColDef[] = [\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 140,\n    renderCell: (params) => {\n      const status = utils.getStatus(params.row);\n      const color = utils.getStatusColor(status || \"\");\n      return <Chip label={status} color={color} />;\n    },\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 140,\n  },\n  {\n    field: \"question\",\n    headerName: \"Question\",\n    minWidth: 250,\n    renderCell: (params) => {\n      return (\n        <Tooltip\n          title={params.row.question.options\n            .map(\n              (o: { number: number; option: string }) =>\n                `${o.number}: ${o.option}`\n            )\n            .join(\"; \")}\n          arrow\n        >\n          <span>{params.row.question.desc}</span>\n        </Tooltip>\n      );\n    },\n  },\n  {\n    field: \"start_date\",\n    headerName: \"Start\",\n    minWidth: 140,\n    valueFormatter: (params) =>\n      params.value?.toLocaleString()?.split(\"T\")[0] || \"\",\n  },\n  {\n    field: \"end_date\",\n    headerName: \"End\",\n    minWidth: 140,\n    valueFormatter: (params) =>\n      params.value?.toLocaleString()?.split(\"T\")[0] || \"\",\n  },\n  {\n    field: \"census\",\n    headerName: \"Census\",\n    minWidth: 100,\n    align: \"center\",\n    valueFormatter: (params) => (params.value as number[])?.length,\n  },\n  {\n    field: \"tally\",\n    headerName: \"Votes\",\n    minWidth: 100,\n    align: \"center\",\n    valueFormatter: (params) =>\n      params.value === \"[]\"\n        ? \"0\"\n        : (params.value as string).replace(\"[\", \"\").replace(\"]\", \"\"),\n  },\n  {\n    field: \"link\",\n    headerName: \"Links\",\n    align: \"center\",\n    renderCell: (params) => {\n      const status = utils.getStatus(params.row);\n      return (\n        <>\n          {status === \"In progress\" && (\n            <IconButton\n              title={\"Vote!\"}\n              icon={<HowToVoteOutlined />}\n              onClick={() =>\n                window.open(\n                  \"http://\" +\n                    window.location.hostname +\n                    (window.location.port ? \":\" + window.location.port : \"\") +\n                    \"/booth/\" +\n                    params.row.id\n                )\n              }\n            />\n          )}\n          {status === \"Finished\" && (\n            <IconButton\n              title={\"Results\"}\n              icon={<Visibility />}\n              onClick={() =>\n                window.open(\n                  \"http://\" +\n                    window.location.hostname +\n                    (window.location.port ? \":\" + window.location.port : \"\") +\n                    \"/visualizer/\" +\n                    params.row.id\n                )\n              }\n            />\n          )}\n        </>\n      );\n    },\n  },\n];\n\nconst Component = (props: {\n  votings: votingType.Voting[];\n  setSelected: any;\n}) => {\n  return (\n    <Table\n      rows={props.votings}\n      columns={columns}\n      setSelected={props.setSelected}\n    />\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Add, Edit } from \"@mui/icons-material\";\n\nimport { votingType } from \"types\";\nimport { votingApi } from \"api\";\nimport { utils } from \"utils\";\n\nimport { Input } from \"components/01-atoms\";\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { Modal, ModalPage } from \"components/02-molecules\";\nimport { CensusInput, QuestionInput } from \".\";\n\nconst Component = (props: {\n  initialVoting?: votingType.Voting;\n  refetch: () => void;\n  notify?: (type: Severity, message: string) => void;\n}) => {\n  const editMode = React.useMemo(\n    () => !!props.initialVoting?.id,\n    [props.initialVoting]\n  );\n\n  const {\n    control,\n    getValues,\n    trigger,\n    clearErrors,\n    formState: { errors },\n    reset,\n  } = useForm<votingType.VotingFormFields>({ mode: \"onChange\" });\n\n  const [sent, setSent] = React.useState(false);\n\n  React.useEffect(() => {\n    reset({});\n    clearErrors();\n    trigger();\n    if (props.initialVoting) {\n      control._defaultValues = {\n        name: props.initialVoting?.name,\n        desc: props.initialVoting?.desc,\n        census: props.initialVoting?.census,\n        question: props.initialVoting?.question,\n        auth: props.initialVoting?.auth,\n      };\n    }\n  }, [props.initialVoting, control, reset, clearErrors, trigger]);\n\n  const onSubmitFailed = (e: any) => {\n    clearErrors();\n    props.notify?.(\"error\", \"Submit failed: \\n\" + e);\n  };\n\n  const onSubmitSuccess = () => {\n    setSent(!sent);\n    props.refetch();\n    props.notify?.(\"success\", editMode ? \"Voting updated\" : \"Voting created\");\n    reset({});\n  };\n\n  const onSubmit: SubmitHandler<votingType.VotingFormFields> = (data) => {\n    console.log(\"submit:\", data);\n    if (Object.keys(errors).length === 0)\n      if (editMode && props.initialVoting?.id) {\n        votingApi\n          .updateVoting(data, props.initialVoting?.id)\n          .then(() => onSubmitSuccess())\n          .catch((error) => onSubmitFailed(utils.parseErrors(error)));\n      } else {\n        votingApi\n          .createVoting(data)\n          .then(() => onSubmitSuccess())\n          .catch((error) => onSubmitFailed(utils.parseErrors(error)));\n      }\n  };\n\n  return (\n    <Modal\n      onSubmit={() => onSubmit(getValues())}\n      title={\n        editMode ? \"Edit Voting \" + props.initialVoting?.name : \"New Voting\"\n      }\n      openerIcon={editMode ? <Edit /> : <Add />}\n      externalClose={sent}\n      pages={[\n        <ModalPage description=\"Indique la información de la Votación\">\n          <Input.Text\n            control={control}\n            name=\"name\"\n            error={errors.name?.message}\n            rules={{ required: true }}\n          />\n          <Input.Text\n            control={control}\n            name=\"desc\"\n            error={errors.desc?.message}\n          />\n        </ModalPage>,\n        <ModalPage description=\"Indique la pregunta de la Votación\">\n          <QuestionInput control={control} />\n        </ModalPage>,\n        <ModalPage description=\"Indique el censo de la Votación\">\n          <CensusInput control={control} />\n        </ModalPage>,\n        <ModalPage description=\"Indique la autorización requerida para la Votación\">\n          <Input.Radio\n            control={control}\n            name=\"auth\"\n            rules={{ required: true }}\n            options={[\n              {\n                label: \"Local (localhost:8000)\",\n                value: `http://localhost:8000`,\n              },\n              {\n                label: `Default (${window.location.host})`,\n                value: `http://${window.location.host}`,\n              },\n            ]}\n          />\n        </ModalPage>,\n      ]}\n    />\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Divider } from \"@mui/material\";\n\nimport { IconButton } from \"components/01-atoms\";\n\ntype Action = {\n  title: string;\n  icon: ReactElement;\n  disabled?: boolean;\n  onClick?: () => void;\n};\n\nconst Component = (props: {\n  selection?: any[];\n  actions?: ReactElement[];\n  individualActions?: Action[];\n  bulkActions?: Action[];\n}) => {\n  const bulkEnabled = React.useMemo(\n    () => props.selection && props.selection.length >= 1,\n    [props.selection]\n  );\n\n  return (\n    <Box id=\"actions\" className=\"inline-flex items-center w-1/12 h-screen px-2\">\n      <Box className=\"w-12 flex flex-col border rounded p-2 gap-3\">\n        {props.actions}\n        <Divider />\n        {props.individualActions?.map((action, index) => (\n          <IconButton\n            key={index}\n            title={action.title}\n            icon={action.icon}\n            onClick={action.onClick}\n          />\n        ))}\n        <Divider />\n        {props.bulkActions?.map((action, index) => (\n          <IconButton\n            key={index}\n            title={action.title}\n            icon={action.icon}\n            onClick={action.onClick}\n            disabled={action.disabled || !bulkEnabled}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Component;\n","import React, { ReactElement } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport { Notification, Title } from \"components/01-atoms\";\nimport { Severity } from \"components/01-atoms/Notification\";\n\nconst Page = (props: {\n  title: string;\n  children?: ReactElement | ReactElement[] | string;\n  notifications?: { type: Severity; message: string }[];\n}) => {\n  return (\n    <>\n      <Box className=\"inline-block w-10/12 h-screen p-1 md:p-5 xl:p-10\">\n        <Box id=\"content\" className=\"my-2 ml-10 inline-block w-11/12\">\n          <Title title={props.title} variant=\"h3\" />\n          <hr className=\"my-6\" />\n          {props.children}\n        </Box>\n        <div id=\"Notifications\">\n          {props.notifications?.map((notification) => (\n            <Notification\n              severity={notification.type}\n              message={notification.message}\n            />\n          ))}\n        </div>\n      </Box>\n    </>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport { HowToVote, Person, Refresh } from \"@mui/icons-material\";\n\nimport { dashboardApi } from \"api\";\nimport { userType } from \"types\";\n\nimport { StatBox } from \"components/01-atoms\";\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { ActionBar } from \"components/03-organisms\";\n\nimport Page from \"../page\";\n\ntype DashboardData = {\n  session: userType.User;\n  users: {\n    total: number;\n    active: number;\n    admins: number;\n    employees: number;\n  };\n  votings: {\n    notStarted: number;\n    inProgress: number;\n    finished: number;\n  };\n};\n\nconst HomePage = () => {\n  const [data, setData] = React.useState<DashboardData>();\n\n  const [refetch, setRefetch] = React.useState(false);\n\n  const refetchData = () => setRefetch(!refetch);\n\n  const [notifications, setNotifications] = React.useState<\n    { type: Severity; message: string }[]\n  >([]);\n\n  const notify = (type: Severity, message: string) => {\n    setNotifications((prev) => [...prev, { type, message }]);\n  };\n\n  React.useEffect(() => {\n    dashboardApi\n      .getData()\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => notify(\"error\", \"Stats not fetched: \" + error.message));\n  }, [refetch]);\n\n  const totalVotings = React.useMemo(\n    () =>\n      data?.votings\n        ? Object.values(data.votings).reduce((acc, v) => acc + v, 0)\n        : 0,\n    [data]\n  );\n\n  return (\n    <>\n      <Page title=\"Home\" notifications={notifications}>\n        <div className=\"grid grid-cols-3 gap-7\">\n          <StatBox\n            title=\"Active users\"\n            active={data?.users.active || 0}\n            total={data?.users.total || 0}\n            icon={<Person />}\n            color=\"success\"\n          />\n          <StatBox\n            title=\"Employees\"\n            active={data?.users.employees || 0}\n            total={data?.users.total || 0}\n            icon={<Person />}\n            color=\"primary\"\n          />\n          <StatBox\n            title=\"Admins\"\n            active={data?.users.admins || 0}\n            total={data?.users.total || 0}\n            icon={<Person />}\n            color=\"primary\"\n          />\n          <StatBox\n            title=\"Votings not started\"\n            active={data?.votings.notStarted || 0}\n            total={totalVotings}\n            icon={<HowToVote />}\n            color=\"primary\"\n          />\n          <StatBox\n            title=\"Votings in progress\"\n            active={data?.votings.inProgress || 0}\n            total={totalVotings}\n            icon={<HowToVote />}\n            color=\"warning\"\n          />\n          <StatBox\n            title=\"Votings finished\"\n            active={data?.votings.finished || 0}\n            total={totalVotings}\n            icon={<HowToVote />}\n            color=\"success\"\n          />\n        </div>\n      </Page>\n\n      <ActionBar\n        individualActions={[\n          {\n            icon: <Refresh />,\n            title: \"Refresh\",\n            onClick: () => refetchData(),\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nimport Page from \"../page\";\n\nconst NotFoundPage = () => {\n  return <Page title=\"404\">not found</Page>;\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Box } from \"@mui/material\";\n\nimport { authApi } from \"api\";\nimport { sessionUtils, utils } from \"utils\";\n\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { Input, Button } from \"components/01-atoms\";\nimport Page from \"../page\";\n\ntype LoginInputs = {\n  username: string;\n  password: string;\n};\n\nconst LoginPage = () => {\n  const {\n    control,\n    getValues,\n    setError,\n    formState: { errors },\n  } = useForm<LoginInputs>();\n\n  const [notifications, setNotifications] = React.useState<\n    { type: Severity; message: string }[]\n  >([]);\n\n  const notify = (type: Severity, message: string) => {\n    setNotifications((prev) => [...prev, { type, message }]);\n  };\n\n  const onSubmitFailed = (e: any) => {\n    if (!e.response) {\n      setError(\"password\", { type: \"manual\", message: \"Server Error\" });\n      setError(\"username\", { type: \"manual\", message: \"\" });\n      notify(\"error\", \"Server Error\");\n    }\n    if (e?.response?.status === 400) {\n      setError(\"password\", {\n        type: \"manual\",\n        message: e.response.data?.password || \"\",\n      });\n      setError(\"username\", {\n        type: \"manual\",\n        message: e.response.data?.username || \"\",\n      });\n      notify(\n        \"error\",\n        \"ERRORS: \" + utils.parseErrors(e) ||\n          e.response.data.non_field_errors[0] ||\n          \"Unknown error\"\n      );\n    }\n  };\n\n  const onSubmit: SubmitHandler<LoginInputs> = (data) => {\n    console.log(\"Login:\", data.username);\n    authApi\n      .login(data.username, data.password)\n      .then((r) => {\n        sessionUtils.setToken(r?.headers[\"set-cookie\"]?.[0]);\n        window.location.reload();\n      })\n      .catch((e) => {\n        onSubmitFailed(e);\n      });\n  };\n\n  return (\n    <Page title=\"Log In\" notifications={notifications}>\n      <Box className=\"flex flex-col w-60 mx-auto my-4\">\n        <form\n          className=\"space-y-5\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(getValues());\n          }}\n        >\n          <Input.Text\n            name=\"username\"\n            control={control}\n            error={errors.username?.message}\n          />\n          <Input.Secret\n            name=\"password\"\n            control={control}\n            error={errors.password?.message}\n          />\n          <Button title=\"LogIn\" type=\"submit\" />\n        </form>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport {\n  AdminPanelSettings,\n  Delete,\n  Pause,\n  PlayArrow,\n  Refresh,\n  Verified,\n} from \"@mui/icons-material\";\n\nimport { userApi } from \"api\";\nimport { userType } from \"types\";\n\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { ActionBar } from \"components/03-organisms\";\nimport { UserForm, UserTable } from \"components/templates\";\n\nimport Page from \"../page\";\n\nconst UsersPage = () => {\n  const [users, setUsers] = React.useState<userType.User[]>([]);\n  const [selected, setSelected] = React.useState([]);\n  const [refetch, setRefetch] = React.useState(false);\n\n  const [notifications, setNotifications] = React.useState<\n    { type: Severity; message: string }[]\n  >([]);\n\n  const notify = (type: Severity, message: string) => {\n    setNotifications((prev) => [...prev, { type, message }]);\n  };\n\n  const refetchUsers = () => {\n    setRefetch(!refetch);\n  };\n\n  React.useEffect(() => {\n    userApi\n      .getUsers()\n      .then((response) => {\n        setUsers(response.data);\n      })\n      .catch((error) => notify(\"error\", \"Users not fetched: \" + error.message));\n  }, [refetch]);\n\n  const idList = React.useMemo(\n    () => selected.map((user: userType.User) => user.id || -1),\n    [selected]\n  );\n\n  const selectionState = React.useMemo(() => {\n    const checkOptions = (active: number) => {\n      if (active === selected.length && selected.length > 0) return \"true\";\n      else if (active === 0) return \"false\";\n      else return \"mixed\";\n    };\n\n    const activeNumber = selected.filter(\n      (user: userType.User) => user.is_active\n    ).length;\n    const staffNumber = selected.filter(\n      (user: userType.User) => user.is_staff\n    ).length;\n    const suNumber = selected.filter(\n      (user: userType.User) => user.is_superuser\n    ).length;\n\n    return {\n      active: checkOptions(activeNumber),\n      staff: checkOptions(staffNumber),\n      su: checkOptions(suNumber),\n    };\n  }, [selected]);\n\n  const handleDelete = () => {\n    userApi\n      .deleteUsers(idList)\n      .then((response) => {\n        refetchUsers();\n        notify(\"success\", \"User/s deleted\");\n      })\n      .catch((error) =>\n        notify(\"error\", \"Error deleting user/s: \" + error.message)\n      );\n  };\n\n  const handleChangeActive = (value: boolean) => {\n    notify(\"info\", \"Loading...\");\n\n    userApi\n      .updateUsersActive(idList, value)\n      .then((response) => {\n        refetchUsers();\n        notify(\"success\", \"User/s status changed\");\n      })\n      .catch((error) =>\n        notify(\"error\", \"Error updating status: \" + error.message)\n      );\n  };\n  const handleChangeRole = (value: boolean, role: \"Staff\" | \"Superuser\") => {\n    notify(\"info\", \"Loading...\");\n\n    userApi\n      .updateUsersRole(idList, value, role)\n      .then((response) => {\n        refetchUsers();\n        notify(\"success\", \"User/s roles changed\");\n      })\n      .catch((error) =>\n        notify(\"error\", \"Error updating roles: \" + error.message)\n      );\n  };\n\n  return (\n    <>\n      <Page title=\"Users\" notifications={notifications}>\n        <UserTable users={users} setSelected={setSelected} />\n      </Page>\n      <ActionBar\n        selection={selected}\n        actions={[\n          <UserForm\n            initialUser={selected.length === 1 ? selected[0] : undefined}\n            refetch={refetchUsers}\n            notify={notify}\n          />,\n        ]}\n        individualActions={[\n          {\n            icon: <Refresh />,\n            title: \"Refresh\",\n            onClick: () => refetchUsers(),\n          },\n        ]}\n        bulkActions={[\n          {\n            icon: <Delete />,\n            title: \"Delete\",\n            onClick: () => {\n              console.log(\"delete\");\n              handleDelete();\n            },\n          },\n          {\n            icon:\n              selectionState.active === \"true\" ? (\n                <Pause color=\"warning\" />\n              ) : (\n                <PlayArrow />\n              ),\n            title:\n              selectionState.active === \"true\"\n                ? \"Mark as Inactive\"\n                : \"Mark as Active\",\n            disabled: selectionState.active === \"mixed\",\n            onClick: () => {\n              console.log(\"switch active\");\n              selectionState.active === \"true\"\n                ? handleChangeActive(false)\n                : handleChangeActive(true);\n            },\n          },\n          {\n            icon:\n              selectionState.staff === \"true\" ? (\n                <Verified color=\"warning\" />\n              ) : (\n                <Verified />\n              ),\n            title:\n              selectionState.staff === \"true\" ? \"Remove Staff\" : \"Make Staff\",\n            disabled: selectionState.staff === \"mixed\",\n            onClick: () => {\n              console.log(\"switch staff\");\n              selectionState.staff === \"true\"\n                ? handleChangeRole(false, \"Staff\")\n                : handleChangeRole(true, \"Staff\");\n            },\n          },\n          {\n            icon:\n              selectionState.su === \"true\" ? (\n                <AdminPanelSettings color=\"warning\" />\n              ) : (\n                <AdminPanelSettings />\n              ),\n            title:\n              selectionState.su === \"true\"\n                ? \"Remove SuperUser\"\n                : \"Make SuperUser\",\n            disabled: selectionState.su === \"mixed\",\n            onClick: () => {\n              console.log(\"switch staff\");\n              selectionState.su === \"true\"\n                ? handleChangeRole(false, \"Superuser\")\n                : handleChangeRole(true, \"Superuser\");\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default UsersPage;\n","import React from \"react\";\nimport {\n  Delete,\n  Refresh,\n  PlayArrow,\n  Stop,\n  HowToVoteOutlined,\n  Cancel,\n} from \"@mui/icons-material\";\n\nimport { votingType } from \"types\";\nimport { votingApi } from \"api\";\nimport { utils } from \"utils\";\n\nimport { Severity } from \"components/01-atoms/Notification\";\nimport { ActionBar } from \"components/03-organisms\";\nimport { VotingTable, VotingForm } from \"components/templates\";\nimport Page from \"../page\";\n\nconst VotingsPage = () => {\n  const [votings, setVotings] = React.useState<votingType.Voting[]>([]);\n  const [selected, setSelected] = React.useState([]);\n  const [refetch, setRefetch] = React.useState(false);\n\n  const [notifications, setNotifications] = React.useState<\n    { type: Severity; message: string }[]\n  >([]);\n\n  const notify = (type: Severity, message: string) => {\n    setNotifications((prev) => [...prev, { type, message }]);\n  };\n\n  const refetchVotings = () => {\n    setRefetch(!refetch);\n  };\n\n  React.useEffect(() => {\n    votingApi\n      .getVotings()\n      .then((response) => {\n        setVotings(response.data);\n      })\n      .catch((error) =>\n        notify(\"error\", \"Votings not fetched: \" + error.message)\n      );\n  }, [refetch]);\n\n  const idList = React.useMemo(\n    () => selected.map((voting: votingType.Voting) => voting.id || -1),\n    [selected]\n  );\n\n  //See if votings have the same status\n  const selectionState = React.useMemo(() => {\n    const getSelectionStatus = (\n      newNumber: number,\n      inProgressNumber: number,\n      finishedNumber: number\n    ) => {\n      if (newNumber === selected.length && selected.length > 0) return \"new\";\n      else if (inProgressNumber === selected.length && selected.length > 0)\n        return \"in_progress\";\n      else if (finishedNumber === selected.length && selected.length > 0)\n        return \"finished\";\n      else return \"mixed\";\n    };\n\n    const newNumber = selected.filter(\n      (voting: votingType.Voting) => utils.getStatus(voting) === \"New\"\n    ).length;\n\n    const inPogressNumber = selected.filter(\n      (voting: votingType.Voting) => utils.getStatus(voting) === \"In progress\"\n    ).length;\n\n    const finishedNumber = selected.filter(\n      (voting: votingType.Voting) => utils.getStatus(voting) === \"Finished\"\n    ).length;\n\n    return {\n      status: getSelectionStatus(newNumber, inPogressNumber, finishedNumber),\n    };\n  }, [selected]);\n\n  const handleDelete = () => {\n    votingApi.deleteVotings(idList).then((response) => {\n      refetchVotings();\n      notify(\"success\", \"Voting/s deleted\");\n    });\n  };\n\n  const handleChangeStatus = (status: string) => {\n    notify(\"info\", \"Loading...\");\n\n    if (status === \"new\")\n      votingApi\n        .startVotings(idList)\n        .then((response) => {\n          refetchVotings();\n          notify(\"success\", \"Voting/s started\");\n        })\n        .catch((error) =>\n          notify(\"error\", \"Voting/s not started: \" + error.message)\n        );\n    if (status === \"in_progress\")\n      votingApi\n        .stopVotings(idList)\n        .then((response) => {\n          refetchVotings();\n          notify(\"success\", \"Voting/s stopped\");\n        })\n        .catch((error) =>\n          notify(\"error\", \"Voting/s not stopped: \" + error.message)\n        );\n    if (status === \"finished\")\n      votingApi\n        .tallyVotings(idList)\n        .then((response) => {\n          refetchVotings();\n          notify(\"success\", \"Voting/s tallied\");\n        })\n        .catch((error) =>\n          notify(\"error\", \"Voting/s not tallied: \" + error.message)\n        );\n  };\n\n  return (\n    <>\n      <Page title=\"Votings\" notifications={notifications}>\n        <VotingTable votings={votings} setSelected={setSelected} />\n      </Page>\n      <ActionBar\n        selection={selected}\n        actions={[\n          <VotingForm\n            initialVoting={selected.length === 1 ? selected[0] : undefined}\n            refetch={refetchVotings}\n            notify={notify}\n          />,\n        ]}\n        individualActions={[\n          {\n            icon: <Refresh />,\n            title: \"Refresh\",\n            onClick: () => refetchVotings(),\n          },\n        ]}\n        bulkActions={[\n          {\n            icon: <Delete />,\n            title: \"Delete\",\n            onClick: () => {\n              handleDelete();\n            },\n          },\n          {\n            icon:\n              selectionState.status === \"new\" ? (\n                <PlayArrow />\n              ) : selectionState.status === \"in_progress\" ? (\n                <Stop />\n              ) : selectionState.status === \"finished\" ? (\n                <HowToVoteOutlined />\n              ) : (\n                <Cancel />\n              ),\n            title:\n              selectionState.status === \"new\"\n                ? \"Start\"\n                : selectionState.status === \"in_progress\"\n                ? \"Stop\"\n                : selectionState.status === \"finished\"\n                ? \"Tally\"\n                : \"Cancel\",\n            disabled: selectionState.status === \"mixed\",\n            onClick: () => {\n              handleChangeStatus(selectionState.status);\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default VotingsPage;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\n\nimport { sessionUtils } from \"utils\";\n\nimport { Loader } from \"components/01-atoms\";\nimport { Menu } from \"components/templates\";\nimport {\n  NotFoundPage,\n  UsersPage,\n  HomePage,\n  LoginPage,\n  VotingsPage,\n} from \"components/pages\";\n\nexport const AppRoutes = () => {\n  const isAuthenticated = sessionUtils?.getToken();\n  React.useEffect(\n    () =>\n      console.log(\n        `rendered, auth: ${isAuthenticated}`,\n        sessionUtils.getToken()\n      ),\n    [isAuthenticated]\n  );\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"h-full w-full flex items-center justify-center\">\n          <Loader />\n        </div>\n      }\n    >\n      <Router basename=\"/administration\">\n        <Menu hidden={!isAuthenticated} />\n        <Routes>\n          {isAuthenticated ? (\n            <>\n              <Route path=\"/users\" element={<UsersPage />} />\n              <Route path=\"/votings\" element={<VotingsPage />} />\n              <Route path=\"/home\" element={<HomePage />} />\n              <Route path=\"/404\" element={<NotFoundPage />} />\n              <Route path=\"*\" element={<Navigate to=\"/404\" />} />\n            </>\n          ) : (\n            <Route path=\"*\" element={<LoginPage />} />\n          )}\n        </Routes>\n      </Router>\n    </Suspense>\n  );\n};\n","import React from \"react\";\n\nimport { AppRoutes } from \"routes\";\n\nimport \"App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App flex\">\n      <AppRoutes />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.css\";\nimport \"styles/tailwind.generated.css\";\n\nimport App from \"App\";\nimport reportWebVitals from \"reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}